name: pi_side_smart_home_task_2_lambda_CI_Build

on:
  push:
    branches:
      - master
      - dev

env:
  DOCKER_IMAGE_NAME: "thebuckeyeman20/smart-home:pi_side_smart_home_task_2_lambda"
  ECR_IMAGE_NAME: "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/smart-home:pi_side_smart_home_task_2_lambda"
  BRANCH: "master"
  CD_REPO_OWNER: "TheBuckeyeMan"
  IAC_REPO_NAME: "Rasberi_Pi_IAC"
  CD_WORKFLOW_ID: "lambda2.yml"

jobs:
  Maven_Build:
    runs-on: ubuntu-latest 

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v1
        with:
          java-version: '21'

      - name: Build with Maven
        run: mvn clean package dependency:copy-dependencies -DincludeScope=runtime

      - name: Pass job 1 to job 2
        uses: actions/upload-artifact@v4
        with:
          name: job1
          path: .


  Docker_Build:
    runs-on: ubuntu-latest
    needs: Maven_Build
    steps:
      - name: Download code and Dockerfile
        uses: actions/download-artifact@v4
        with:
          name: job1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Building Docker Image
        run: |
          docker build -t $DOCKER_IMAGE_NAME .
    
      - name: Save Docker Image as Artifact
        run: |
          docker save -o image.tar $DOCKER_IMAGE_NAME
            
      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: image.tar


  Dockerhub_Push:
    runs-on: ubuntu-latest
    needs: Docker_Build
    steps:

      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker Image
        run: |
          docker load -i image.tar

      - name: Logging into Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: |
          docker push $DOCKER_IMAGE_NAME


  AWS_ECR_Push:
    runs-on: ubuntu-latest
    needs: Docker_Build
    steps:
      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker Image
        run: |
          docker load -i image.tar

      - name: Re-tag Docker Image for ECR
        run: |
          docker tag $DOCKER_IMAGE_NAME $ECR_IMAGE_NAME

      - name: Configuring AWS Credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region ${{ secrets.AWS_REGION }}
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Pushing Docker Image to ECR
        run: |
          docker push $ECR_IMAGE_NAME


  Trigger_CD_Pipeline:
    runs-on: ubuntu-latest
    needs: AWS_ECR_Push
    steps:
      - name: Provisioning Infrastructure
        env:
          CICD_GH_TOKEN: ${{ secrets.CICD_GH_TOKEN }}
        run: |
          echo "Sending workflow_dispatch to $CD_REPO_OWNER/$IAC_REPO_NAME on branch $BRANCH"
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $CICD_GH_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$CD_REPO_OWNER/$IAC_REPO_NAME/actions/workflows/$CD_WORKFLOW_ID/dispatches \
            -d "{\"ref\": \"$BRANCH\"}"
            